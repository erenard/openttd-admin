/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'com.google.code.gson:gson:2.2.2'
    api 'log4j:log4j:1.2.17'
    api 'org.slf4j:slf4j-api:1.6.6'
    api 'org.slf4j:slf4j-log4j12:1.6.6'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task buildGameScript(type: Exec, dependsOn: 'compileJava') {
    workingDir "src/squirrel"
    commandLine 'python', 'make_tar.py'
}

sourceSets {
    main {
         java {
            srcDirs = ['src/java']
         }
         resources {
            srcDirs = ['src/squirrel']
         }
    }

    test {
        java {
            srcDirs = ['test/java']
        }
        resources {
            srcDirs = ['test/resources', 'openttd']
        }
    }
}
